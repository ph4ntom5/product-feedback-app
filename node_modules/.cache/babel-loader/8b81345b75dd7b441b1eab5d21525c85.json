{"ast":null,"code":"var _jsxFileName = \"/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/getsorted/getsorted.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./getsorted.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Getsorted = ({\n  selected,\n  setSelected\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const options = [\"Most Upvotes\", \"Least Upvotes\", \"Most Comments\", \"Least Comments\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-btn\",\n        onClick: e => setIsOpen(!isOpen),\n        children: [\"Sort by :\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-content\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => setSelected(option),\n          className: \"dropdown-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), option]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Getsorted, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Getsorted;\nexport default Getsorted;\n\nvar _c;\n\n$RefreshReg$(_c, \"Getsorted\");","map":{"version":3,"sources":["/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/getsorted/getsorted.js"],"names":["React","useState","Getsorted","selected","setSelected","isOpen","setIsOpen","options","e","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMM,OAAO,GAAG,CACd,cADc,EAEd,eAFc,EAGd,eAHc,EAId,gBAJc,CAAhB;AAMA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,OAAO,EAAGC,CAAD,IAAOF,SAAS,CAAC,CAACD,MAAF,CAAvD;AAAA,gCACY,GADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGA,MAAM,iBACL;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACGE,OAAO,CAACE,GAAR,CAAaC,MAAD,iBACX;AACE,UAAA,OAAO,EAAGF,CAAD,IAAOJ,WAAW,CAACM,MAAD,CAD7B;AAEE,UAAA,SAAS,EAAC,eAFZ;AAAA,kCAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,EAMGA,MANH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CA/BD;;GAAMR,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./getsorted.scss\";\n\nconst Getsorted = ({ selected, setSelected }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const options = [\n    \"Most Upvotes\",\n    \"Least Upvotes\",\n    \"Most Comments\",\n    \"Least Comments\",\n  ];\n  return (\n    <>\n      <div className=\"dropdown\">\n        <div className=\"dropdown-btn\" onClick={(e) => setIsOpen(!isOpen)}>\n          Sort by :{\" \"}\n        </div>\n        {isOpen && (\n          <div className=\"dropdown-content\">\n            {options.map((option) => (\n              <div\n                onClick={(e) => setSelected(option)}\n                className=\"dropdown-item\"\n              >\n                <hr></hr>\n\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Getsorted;\n"]},"metadata":{},"sourceType":"module"}