{"ast":null,"code":"var _jsxFileName = \"/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js\";\nimport React from \"react\";\nimport \"./dropdown.scss\";\nimport { Menu, MenuButton, MenuList, MenuItemOption, MenuOptionGroup, MenuDivider } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"]; //Dropdown arrow animation\n\nconst variants = {\n  rotate: {\n    rotate: [0, -80, 0],\n    transition: {\n      duration: 0.5\n    }\n  },\n  stop: {\n    y: [0, 0, 0],\n    transition: {\n      repeat: Infinity,\n      repeatDelay: 3\n    }\n  }\n}; //Switch Styles\n\nconst Dropdown = ({\n  dropdownStyle,\n  rotate\n}) => {\n  const checkDropdownStyle = STYLES.includes(dropdownStyle) ? dropdownStyle : STYLES[0];\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    closeOnSelect: true,\n    autoSelect: true,\n    closeOnBlur: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      as: Button,\n      className: `${checkDropdownStyle}`,\n      children: [\"Sort by : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Most Upvotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(motion.div, {\n        variants: variants,\n        animate: rotate ? \"rotate\" : \"stop\",\n        children: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n      minWidth: \"240px\",\n      children: /*#__PURE__*/_jsxDEV(MenuOptionGroup, {\n        type: \"radio\",\n        closeOnBlur: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"most upvotes\",\n          children: \"Most Upvotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"least upvotes\",\n          children: \"Least Upvotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"most comments\",\n          children: \"Most Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"least comments\",\n          children: \"Least Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js"],"names":["React","Menu","MenuButton","MenuList","MenuItemOption","MenuOptionGroup","MenuDivider","Button","ChevronDownIcon","motion","STYLES","variants","rotate","transition","duration","stop","y","repeat","Infinity","repeatDelay","Dropdown","dropdownStyle","checkDropdownStyle","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,WANF,QAOO,kBAPP;AAQA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,MAAM,GAAG,CAAC,eAAD,EAAkB,gBAAlB,CAAf,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AAAEA,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAV;AAAuBC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAAnC,GADO;AAEfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAL;AAAgBH,IAAAA,UAAU,EAAE;AAAEI,MAAAA,MAAM,EAAEC,QAAV;AAAoBC,MAAAA,WAAW,EAAE;AAAjC;AAA5B;AAFS,CAAjB,C,CAKA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBT,EAAAA;AAAjB,CAAD,KAA+B;AAC9C,QAAMU,kBAAkB,GAAGZ,MAAM,CAACa,QAAP,CAAgBF,aAAhB,IACvBA,aADuB,GAEvBX,MAAM,CAAC,CAAD,CAFV;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,aAAa,EAAE,IAArB;AAA2B,IAAA,UAAU,EAAE,IAAvC;AAA6C,IAAA,WAAW,EAAE,IAA1D;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEH,MAAhB;AAAwB,MAAA,SAAS,EAAG,GAAEe,kBAAmB,EAAzD;AAAA,4CACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,EACgC,GADhC,eAEE,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,QAAQ,EAAEX,QAAtB;AAAgC,QAAA,OAAO,EAAEC,MAAM,GAAG,QAAH,GAAc,MAA7D;AAAA,+BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,OAAnB;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,OAAtB;AAA8B,QAAA,WAAW,EAAE,IAA3C;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1BD;;KAAMQ,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport \"./dropdown.scss\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItemOption,\n  MenuOptionGroup,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\n\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"];\n\n//Dropdown arrow animation\n\nconst variants = {\n  rotate: { rotate: [0, -80, 0], transition: { duration: 0.5 } },\n  stop: { y: [0, 0, 0], transition: { repeat: Infinity, repeatDelay: 3 } },\n};\n\n//Switch Styles\n\nconst Dropdown = ({ dropdownStyle, rotate }) => {\n  const checkDropdownStyle = STYLES.includes(dropdownStyle)\n    ? dropdownStyle\n    : STYLES[0];\n\n  return (\n    <Menu closeOnSelect={true} autoSelect={true} closeOnBlur={true}>\n      <MenuButton as={Button} className={`${checkDropdownStyle}`}>\n        Sort by : <b>Most Upvotes</b>{\" \"}\n        <motion.div variants={variants} animate={rotate ? \"rotate\" : \"stop\"}>\n          <ChevronDownIcon />\n        </motion.div>\n      </MenuButton>\n      <MenuList minWidth=\"240px\">\n        <MenuOptionGroup type=\"radio\" closeOnBlur={true}>\n          <MenuItemOption value=\"most upvotes\">Most Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least upvotes\">Least Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"most comments\">Most Comments</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least comments\">Least Comments</MenuItemOption>\n        </MenuOptionGroup>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}