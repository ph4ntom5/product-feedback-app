{"ast":null,"code":"var _jsxFileName = \"/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./dropdown.scss\";\nimport { Menu, MenuButton, MenuList, MenuItemOption, MenuOptionGroup, MenuDivider } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"]; //Switch Styles\n\nconst Dropdown = ({\n  dropdownStyle\n}) => {\n  _s();\n\n  const checkDropdownStyle = STYLES.includes(dropdownStyle) ? dropdownStyle : STYLES[0];\n  const [rotation, setRotation] = useState(0);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    id: \"country\",\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Select country\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"United Arab Emirates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Nigeria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n  /* return (\n    <Menu closeOnSelect={true} autoSelect={true} closeOnBlur={true}>\n      <MenuButton\n        as={Button}\n        className={`${checkDropdownStyle}`}\n        onClick={() => setRotation(rotation + 180)}\n      >\n        <div className=\"wrapper\">\n          Sort by : <b> Most Upvotes </b>\n          <motion.div animate={{ rotate: rotation }}>\n            <ChevronDownIcon />\n          </motion.div>\n        </div>\n      </MenuButton>\n       <MenuList minWidth=\"240px\">\n        <MenuOptionGroup type=\"radio\" closeOnBlur={true}>\n          <MenuItemOption value=\"most upvotes\">Most Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least upvotes\">Least Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"most comments\">Most Comments</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least comments\">Least Comments</MenuItemOption>\n        </MenuOptionGroup>\n      </MenuList>\n    </Menu>\n  ); */\n};\n\n_s(Dropdown, \"KtFf5RGYOqNhGWz4PZT7B8M7m1w=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js"],"names":["React","useState","Menu","MenuButton","MenuList","MenuItemOption","MenuOptionGroup","MenuDivider","Button","ChevronDownIcon","motion","FormControl","FormLabel","FormErrorMessage","FormHelperText","STYLES","Dropdown","dropdownStyle","checkDropdownStyle","includes","rotation","setRotation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,WANF,QAOO,kBAPP;AAQA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,cAJF,QAKO,kBALP;;AAOA,MAAMC,MAAM,GAAG,CAAC,eAAD,EAAkB,gBAAlB,CAAf,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACtC,QAAMC,kBAAkB,GAAGH,MAAM,CAACI,QAAP,CAAgBF,aAAhB,IACvBA,aADuB,GAEvBF,MAAM,CAAC,CAAD,CAFV;AAGA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,CAAD,CAAxC;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAC,SAAhB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,gBAApB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CA3CD;;GAAMe,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./dropdown.scss\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItemOption,\n  MenuOptionGroup,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n} from \"@chakra-ui/react\";\n\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"];\n\n//Switch Styles\n\nconst Dropdown = ({ dropdownStyle }) => {\n  const checkDropdownStyle = STYLES.includes(dropdownStyle)\n    ? dropdownStyle\n    : STYLES[0];\n  const [rotation, setRotation] = useState(0);\n\n  return (\n    <FormControl id=\"country\">\n      <Select placeholder=\"Select country\">\n        <option>United Arab Emirates</option>\n        <option>Nigeria</option>\n      </Select>\n    </FormControl>\n  );\n\n  /* return (\n    <Menu closeOnSelect={true} autoSelect={true} closeOnBlur={true}>\n      <MenuButton\n        as={Button}\n        className={`${checkDropdownStyle}`}\n        onClick={() => setRotation(rotation + 180)}\n      >\n        <div className=\"wrapper\">\n          Sort by : <b> Most Upvotes </b>\n          <motion.div animate={{ rotate: rotation }}>\n            <ChevronDownIcon />\n          </motion.div>\n        </div>\n      </MenuButton>\n\n      <MenuList minWidth=\"240px\">\n        <MenuOptionGroup type=\"radio\" closeOnBlur={true}>\n          <MenuItemOption value=\"most upvotes\">Most Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least upvotes\">Least Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"most comments\">Most Comments</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least comments\">Least Comments</MenuItemOption>\n        </MenuOptionGroup>\n      </MenuList>\n    </Menu>\n  ); */\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}