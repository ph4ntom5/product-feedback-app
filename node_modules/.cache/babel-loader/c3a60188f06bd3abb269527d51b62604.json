{"ast":null,"code":"var _jsxFileName = \"/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./dropdown.scss\";\nimport { Menu, MenuButton, MenuList, MenuItemOption, MenuOptionGroup, MenuDivider } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"]; //Switch Styles\n\nconst Dropdown = ({\n  dropdownStyle\n}) => {\n  _s();\n\n  const checkDropdownStyle = STYLES.includes(dropdownStyle) ? dropdownStyle : STYLES[0];\n  const [rotation, setRotation] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: () => setRotation(rotation + 180),\n    closeOnSelect: true,\n    autoSelect: true,\n    closeOnBlur: true,\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      as: Button,\n      className: `${checkDropdownStyle}`,\n      children: [\"Sort by : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Most Upvotes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        animate: {\n          rotate: rotation\n        },\n        children: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n      minWidth: \"240px\",\n      children: /*#__PURE__*/_jsxDEV(MenuOptionGroup, {\n        type: \"radio\",\n        closeOnBlur: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"most upvotes\",\n          children: \"Most Upvotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"least upvotes\",\n          children: \"Least Upvotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"most comments\",\n          children: \"Most Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItemOption, {\n          value: \"least comments\",\n          children: \"Least Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"KtFf5RGYOqNhGWz4PZT7B8M7m1w=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/tomsta/Google Drive/product-feedback-app/src/components/dropdowns/dropdown.js"],"names":["React","useState","Menu","MenuButton","MenuList","MenuItemOption","MenuOptionGroup","MenuDivider","Button","ChevronDownIcon","motion","STYLES","Dropdown","dropdownStyle","checkDropdownStyle","includes","rotation","setRotation","rotate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,eALF,EAMEC,WANF,QAOO,kBAPP;AAQA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,MAAM,GAAG,CAAC,eAAD,EAAkB,gBAAlB,CAAf,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AACtC,QAAMC,kBAAkB,GAAGH,MAAM,CAACI,QAAP,CAAgBF,aAAhB,IACvBA,aADuB,GAEvBF,MAAM,CAAC,CAAD,CAFV;AAGA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,CAAD,CAAxC;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,OAAO,EAAE,MAAMgB,WAAW,CAACD,QAAQ,GAAG,GAAZ,CAD5B;AAEE,IAAA,aAAa,EAAE,IAFjB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,WAAW,EAAE,IAJf;AAAA,4BAME,QAAC,UAAD;AAAY,MAAA,EAAE,EAAER,MAAhB;AAAwB,MAAA,SAAS,EAAG,GAAEM,kBAAmB,EAAzD;AAAA,4CACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,eAEE,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,OAAO,EAAE;AAAEI,UAAAA,MAAM,EAAEF;AAAV,SAArB;AAAA,+BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAaE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAC,OAAnB;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,OAAtB;AAA8B,QAAA,WAAW,EAAE,IAA3C;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAjCD;;GAAMJ,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./dropdown.scss\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItemOption,\n  MenuOptionGroup,\n  MenuDivider,\n} from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\n\nconst STYLES = [\"dropdown-dark\", \"dropdown-light\"];\n\n//Switch Styles\n\nconst Dropdown = ({ dropdownStyle }) => {\n  const checkDropdownStyle = STYLES.includes(dropdownStyle)\n    ? dropdownStyle\n    : STYLES[0];\n  const [rotation, setRotation] = useState(0);\n\n  return (\n    <Menu\n      onClick={() => setRotation(rotation + 180)}\n      closeOnSelect={true}\n      autoSelect={true}\n      closeOnBlur={true}\n    >\n      <MenuButton as={Button} className={`${checkDropdownStyle}`}>\n        Sort by : <b>Most Upvotes</b>\n        <motion.div animate={{ rotate: rotation }}>\n          <ChevronDownIcon />\n        </motion.div>\n      </MenuButton>\n\n      <MenuList minWidth=\"240px\">\n        <MenuOptionGroup type=\"radio\" closeOnBlur={true}>\n          <MenuItemOption value=\"most upvotes\">Most Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least upvotes\">Least Upvotes</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"most comments\">Most Comments</MenuItemOption>\n          <MenuDivider />\n          <MenuItemOption value=\"least comments\">Least Comments</MenuItemOption>\n        </MenuOptionGroup>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}