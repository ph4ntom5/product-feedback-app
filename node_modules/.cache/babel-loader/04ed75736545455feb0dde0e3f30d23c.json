{"ast":null,"code":"var _jsxFileName = \"/Users/tomsta/Google Drive/product-feedback-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles/App.scss\";\nimport UIButton from \"./components/layout/buttons/uibutton/button\";\nimport Dropdown from \"./components/dropdowns/dropdown\";\nimport SortBy from \"./components/dropdowns/sortby/sortby\";\nimport Getsorted from \"./components/dropdowns/getsorted/getsorted\";\nimport Upvote from \"./components/layout/buttons/upvote-btn/upvote\";\nimport Themebtn from \"./components/layout/buttons/theme-btn/themebtn\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selected, setSelected] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      children: [/*#__PURE__*/_jsxDEV(UIButton, {\n        type: \"button\",\n        buttonStyle: \"btn-primary-solid\",\n        buttonSize: \"btn-normal\",\n        children: \"+Add Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UIButton, {\n        type: \"button\",\n        buttonStyle: \"btn-icon-solid\",\n        buttonSize: \"btn-normal\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upvote, {\n        type: \"button\",\n        buttonStyle: \"btn-upvote-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Themebtn, {\n        children: \"UX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortBy, {\n        SortByStyle: \"sort-dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Getsorted, {\n        selected: (selected, setSelected)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"5JZuWEbSK7gWtQNUHwm+D/HbW5U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tomsta/Google Drive/product-feedback-app/src/App.js"],"names":["UIButton","Dropdown","SortBy","Getsorted","Upvote","Themebtn","ThemeProvider","useState","App","selected","setSelected"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,QAAP,MAAqB,6CAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,MAAP,MAAmB,+CAAnB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,mBAFd;AAGE,QAAA,UAAU,EAAC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,QAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,UAAU,EAAC,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,WAAW,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,SAAD;AAAW,QAAA,QAAQ,GAAGE,QAAQ,EAAEC,WAAb;AAAnB;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;;GA5BQF,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import \"./styles/App.scss\";\nimport UIButton from \"./components/layout/buttons/uibutton/button\";\nimport Dropdown from \"./components/dropdowns/dropdown\";\nimport SortBy from \"./components/dropdowns/sortby/sortby\";\nimport Getsorted from \"./components/dropdowns/getsorted/getsorted\";\nimport Upvote from \"./components/layout/buttons/upvote-btn/upvote\";\nimport Themebtn from \"./components/layout/buttons/theme-btn/themebtn\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nfunction App() {\n  const [selected, setSelected] = useState(\"\");\n\n  return (\n    <>\n      <ThemeProvider>\n        <UIButton\n          type=\"button\"\n          buttonStyle=\"btn-primary-solid\"\n          buttonSize=\"btn-normal\"\n        >\n          +Add Feedback\n        </UIButton>\n        <UIButton\n          type=\"button\"\n          buttonStyle=\"btn-icon-solid\"\n          buttonSize=\"btn-normal\"\n        >\n          Go Back\n        </UIButton>\n        <Upvote type=\"button\" buttonStyle=\"btn-upvote-icon\"></Upvote>\n        <Themebtn>UX</Themebtn>\n        <Dropdown></Dropdown>\n        <SortBy SortByStyle=\"sort-dark\"></SortBy>\n        <Getsorted selected={(selected, setSelected)}></Getsorted>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}